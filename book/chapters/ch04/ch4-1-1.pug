include ../../source/_path
- var ch_num="ch4/"
//- 章节
#ch4-1-1
    //-文段
    section
        p.h3 4.1.1 动态的属性
        p.paragraph 定义基本类型值和引用类型值的方式是类似的：创建一个变量并为该变量赋值。但是，当这个值保存到变量中以后，对不同类型值可以执行的操作则大相径庭。对于引用类型的值，我们可以为其添加属性和方法，也可以改变和删除其属性和方法。请看下面的例子：
        pre
            code.
                var person = new Object();
                person.name = "Nicholas";
                alert(person.name); //"Nicholas"
        p.paragraph.source-file DynamicPropertiesExample01.htm
        p.paragraph 以上代码创建了一个对象并将其保存在了变量 person 中。然后，我们为该对象添加了一个名为name 的属性，并将字符串值"Nicholas"赋给了这个属性。紧接着，又通过 alert()函数访问了这个新属性。如果对象不被销毁或者这个属性不被删除，则这个属性将一直存在。
        p.paragraph 但是，我们不能给基本类型的值添加属性，尽管这样做不会导致任何错误。比如：
        pre
            code.
                var name = "Nicholas";
                name.age = 27;
                alert(name.age); //undefined
        p.paragraph.source-file DynamicPropertiesExample02.htm
        p.paragraph 在这个例子中，我们为字符串 name 定义了一个名为 age 的属性，并为该属性赋值 27。但在下一行访问这个属性时，发现该属性不见了。这说明只能给引用类型值动态地添加属性，以便将来使用。