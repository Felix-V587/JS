include ../../source/_path
- var ch_num="5-2-9/"
//- 章节
#ch5-2-9
    //-文段
    section
        p.h3 5.2.9 归并方法
        p.paragraph ECMAScript5还新增了两个归并数组的方法：reduce()和reduceRight()。这两个方法都会迭代数组的所有项，然后构建一个最终返回的值。其中，reduce()方法从数组的第一项开始，逐个遍历到最后。而reduceRight()则从数组的最后一项开始，向前遍历到第一项。
        p.paragraph 这两个方法都接收两个参数：一个在每一项上调用的函数和（可选的）作为归并基础的初始值。传给reduce()和reduceRight()的函数接收4个参数：前一个值、当前值、项的索引和数组对象。这个函数返回的任何值都会作为第一个参数自动传给下一项。第一次迭代发生在数组的第二项上，因此第一个参数是数组的第一项，第二个参数就是数组的第二项。
        p.paragraph 使用reduce()方法可以执行求数组中所有值之和的操作，比如：
        pre
            code.
                var values = [1,2,3,4,5];
                var sum = values.reduce(function(prev, cur, index,array){
                    return prev + cur;
                });
                alert(sum); //15
        p.paragraph.source-file ArrayReductionExample01.htm
        p.paragraph 第一次执行回调函数，prev是1，cur是2。第二次，prev是3（1加2的结果），cur是3（数组的第三项）。这个过程会持续到把数组中的每一项都访问一遍，最后返回结果。
        p.paragraph reduceRight()的作用类似，只不过方向相反而已。来看下面这个例子。
        pre
            code.
                var values = [1,2,3,4,5];
                var sum = values.reduceRight(function(prev, cur,index,array){
                    return prev + cur;
                });
                alert(sum); //15
        p.paragraph 在这个例子中，第一次执行回调函数，prev是5，cur是4。当然，最终结果相同，因为执行的都是简单相加的操作。
        p.paragraph 使用reduce()还是reduceRight()，主要取决于要从哪头开始遍历数组。除此之外，它们完全相同。支持这两个归并函数的浏览器有IE9+、Firefox 3+、Safari 4+、Opera10.5和Chrome。
