include ../../source/_path
- var ch_num="#ch3-7-2/"
//- 章节
#ch3-7-2
    //-文段
    section
        p.h3 3.7.2 没有重载
        p.paragraph ECMAScript 函数不能像传统意义上那样实现重载。而在其他语言（如 Java）中，可以为一个函数编写两个定义，只要这两个定义的签名（接受的参数的类型和数量）不同即可。如前所述，ECMAScirpt函数没有签名，因为其参数是由包含零或多个值的数组来表示的。而没有函数签名，真正的重载是不可能做到的。
        p.paragraph 如果在 ECMAScript 中定义了两个名字相同的函数，则该名字只属于后定义的函数。请看下面的例子：
        pre
            code.
                function addSomeNumber(num){
                    return num + 100;
                }
                function addSomeNumber(num) {
                    return num + 200;
                }
                var result = addSomeNumber(100); //300
        p.paragraph.source-file FunctionExample10.htm
        p.paragraph 在此，函数 addSomeNumber()被定义了两次。第一个版本给参数加 100，而第二个版本给参数加200。由于后定义的函数覆盖了先定义的函数，因此当在最后一行代码中调用这个函数时，返回的结果就是 300。
        p.paragraph 如前所述，通过检查传入函数中参数的类型和数量并作出不同的反应，可以模仿方法的重载。

