include ../../source/_path
- var ch_num="ch2-1-1/"
//- 章节
#ch2-1-1
    //-文段
    section
        //- 三级标题
        p.h3 2.1.1 标签的位置
        p.paragraph 按照传统的做法，所有&lt;script&gt;元素都应该放在页面的&lt;head&gt;元素中，例如：
        pre
            code.
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                    &lt;head&gt;
                        &lt;title&gt;Example HTML Page&lt;/title&gt;
                        &lt;script type="text/javascript" src="example1.js"&gt;&lt;/script&gt;
                        &lt;script type="text/javascript" src="example2.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                        &lt;!-- 这里放内容 --&gt;
                    &lt;/body&gt;
                &lt;/html&gt;
        p.paragraph.
            这种做法的目的就是把所有外部文件（包括 CSS 文件和 JavaScript 文件）的引用都放在相同的地方。可是，在文档的&lt;head&gt;元素中包含所有 JavaScript 文件，意味着必须等到全部 JavaScript 代码都被下载、解析和执行完成以后，才能开始呈现页面的内容（浏览器在遇到&lt;body&gt;标签时才开始呈现内容）。对于那些需要很多 JavaScript 代码的页面来说，这无疑会导致浏览器在呈现页面时出现明显的延迟，而延迟期间的浏览器窗口中将是一片空白。为了避免这个问题，现代 Web 应用程序一般都把全部 JavaScript 引用放在&lt;body&gt;元素中页面内容的后面，如下例所示：
        pre
            code.
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                    &lt;head&gt;
                        &lt;title&gt;Example HTML Page&lt;/title&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                        &lt;!-- 这里放内容 --&gt;
                        &lt;script type="text/javascript" src="example1.js"&gt;&lt;/script&gt;
                        &lt;script type="text/javascript" src="example2.js"&gt;&lt;/script&gt;
                    &lt;/body&gt;
                &lt;/html&gt;
        p.paragraph.
            这样，在解析包含的 JavaScript 代码之前，页面的内容将完全呈现在浏览器中。而用户也会因为浏览器窗口显示空白页面的时间缩短而感到打开页面的速度加快了。